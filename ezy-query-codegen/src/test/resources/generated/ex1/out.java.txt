package mypackage.sql;

import io.github.kayr.ezyquery.EzyQuery;
import io.github.kayr.ezyquery.api.EzyCriteria;
import io.github.kayr.ezyquery.api.Field;
import io.github.kayr.ezyquery.parser.QueryAndParams;
import java.lang.Boolean;
import java.lang.Byte;
import java.lang.Class;
import java.lang.Double;
import java.lang.Float;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import javax.annotation.processing.Generated;

/**
 * SELECT
 *     td.id AS 'id_bigint',
 *     td.long_ AS 'longval_long',
 *     td.int_ AS 'intval_int',
 *     tr.float_ AS 'floatval_float',
 *     maw.double_ AS 'doubleval_double',
 *     mtw.string_ AS 'stringval_string',
 *     mtw.boolean_ AS 'booleanval_boolean',
 *     tr.date_ AS 'dateval_date',
 *     tr.time AS 'timeval_time',
 *     tr.bigint_ AS 'bigintval_bigint',
 *     tr.bigdecimal_ AS 'bigdecimalval_decimal',
 *     tr.blob_ AS 'blobval_byte',
 *     tr.object_ AS 'objectval_object'
 * FROM
 *     m_awamo_wallet maw
 * INNER JOIN m_tenant_wallet mtw ON
 *     mtw.id = maw.wallet_id
 * INNER JOIN w_wallet_transaction_request tr ON
 *     tr.wallet_id = mtw.id
 * INNER JOIN m_wallet_transaction_detail td ON
 *     td.wallet_tx_request_id = tr.id
 *     where 1 <> 8
 */
@Generated(
    value = "io.github.kayr.ezyquery.gen.QueryGen",
    date = "0000-00-00 00:00:00"
)
public class MyQuery implements EzyQuery<MyQuery.Result> {
  public static Field<BigInteger> ID = Field.of("td.id", "id", BigInteger.class);

  public static Field<Long> LONGVAL = Field.of("td.long_", "longval", Long.class);

  public static Field<Integer> INTVAL = Field.of("td.int_", "intval", Integer.class);

  public static Field<Float> FLOATVAL = Field.of("tr.float_", "floatval", Float.class);

  public static Field<Double> DOUBLEVAL = Field.of("maw.double_", "doubleval", Double.class);

  public static Field<String> STRINGVAL = Field.of("mtw.string_", "stringval", String.class);

  public static Field<Boolean> BOOLEANVAL = Field.of("mtw.boolean_", "booleanval", Boolean.class);

  public static Field<Date> DATEVAL = Field.of("tr.date_", "dateval", Date.class);

  public static Field<Timestamp> TIMEVAL = Field.of("tr.time", "timeval", Timestamp.class);

  public static Field<BigInteger> BIGINTVAL = Field.of("tr.bigint_", "bigintval", BigInteger.class);

  public static Field<BigDecimal> BIGDECIMALVAL = Field.of("tr.bigdecimal_", "bigdecimalval", BigDecimal.class);

  public static Field<Byte> BLOBVAL = Field.of("tr.blob_", "blobval", Byte.class);

  public static Field<Object> OBJECTVAL = Field.of("tr.object_", "objectval", Object.class);

  public static final MyQuery QUERY = new MyQuery();

  private final String schema = "m_awamo_wallet maw\n"
            + "INNER JOIN m_tenant_wallet mtw ON mtw.id = maw.wallet_id\n"
            + "INNER JOIN w_wallet_transaction_request tr ON tr.wallet_id = mtw.id\n"
            + "INNER JOIN m_wallet_transaction_detail td ON td.wallet_tx_request_id = tr.id\n"
  ;

  private final List<Field<?>> fields = new ArrayList<Field<?>>();

  public MyQuery() {
    init();
  }

  private void init() {
    fields.add(ID);
    fields.add(LONGVAL);
    fields.add(INTVAL);
    fields.add(FLOATVAL);
    fields.add(DOUBLEVAL);
    fields.add(STRINGVAL);
    fields.add(BOOLEANVAL);
    fields.add(DATEVAL);
    fields.add(TIMEVAL);
    fields.add(BIGINTVAL);
    fields.add(BIGDECIMALVAL);
    fields.add(BLOBVAL);
    fields.add(OBJECTVAL);
  }

  public QueryAndParams query(EzyCriteria criteria) {
    return EzyQuery.buildQueryAndParams(criteria, fields, schema);
  }

  @Override
  public List<Field<?>> fields() {
    return Collections.emptyList();
  }

  @Override
  public Class<Result> resultClass() {
        return Result.class;
  }

  public static class Result {
    public BigInteger id;

    public Long longval;

    public Integer intval;

    public Float floatval;

    public Double doubleval;

    public String stringval;

    public Boolean booleanval;

    public Date dateval;

    public Timestamp timeval;

    public BigInteger bigintval;

    public BigDecimal bigdecimalval;

    public Byte blobval;

    public Object objectval;

    @Override
    public String toString() {
      return "MyQuery{"
      + "id = " + id
      + ", longval = " + longval
      + ", intval = " + intval
      + ", floatval = " + floatval
      + ", doubleval = " + doubleval
      + ", stringval = " + stringval
      + ", booleanval = " + booleanval
      + ", dateval = " + dateval
      + ", timeval = " + timeval
      + ", bigintval = " + bigintval
      + ", bigdecimalval = " + bigdecimalval
      + ", blobval = " + blobval
      + ", objectval = " + objectval
       + "}";
    }
  }
}
